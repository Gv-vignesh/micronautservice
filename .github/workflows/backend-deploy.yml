name: Deploy Backend to EKS

on:
  push:
    branches: [ develop ]
    paths:
      - 'micronautservice/**'
      - '.github/workflows/backend-deploy.yml'
      - 'k8s/**'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: micronaut-app
  EKS_CLUSTER: your-eks-cluster-name
  NAMESPACE: production

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and test
      working-directory: ./micronautservice
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Build, tag, and push image to Amazon ECR
      working-directory: ./micronautservice
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update the deployment image
        sed -i "s|image: .*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|" k8s/deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        # Wait for deployment to complete
        kubectl rollout status deployment/micronaut-app -n ${{ env.NAMESPACE }}

    - name: Verify Deployment
      run: |
        kubectl get services -n ${{ env.NAMESPACE }}
        kubectl get pods -n ${{ env.NAMESPACE }}

    - name: Send Notification
      if: always()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "Backend Deployment Status: ${{ job.status }}\nCommit: ${{ github.sha }}\nEnvironment: Production"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 