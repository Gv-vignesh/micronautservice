plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.2"
    id("io.micronaut.aot") version "4.3.2"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations:${micronautSecurityVersion}")
    
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.apache.groovy:groovy")
    
    // Security dependencies with explicit versions
    implementation("io.micronaut.security:micronaut-security:${micronautSecurityVersion}")
    implementation("io.micronaut.security:micronaut-security-jwt:${micronautSecurityVersion}")
    
    // Updated Reactor dependencies
    implementation("io.micronaut.reactor:micronaut-reactor-http-client:${micronautReactorVersion}")
    implementation("io.projectreactor:reactor-core:${reactorVersion}")
    
    compileOnly("io.micronaut:micronaut-http-validation")
    
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")
    
    testImplementation("io.micronaut:micronaut-http-client")
    
    // Add these if not already present
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.projectreactor:reactor-core")
    
    // Security dependencies
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")

    // Add these dependencies
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("org.postgresql:postgresql")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("org.mindrot:jbcrypt:0.4")

    // Add this if you don't have micronautSecurityVersion defined
    ext {
        micronautSecurityVersion = "4.1.1"
    }

    // Remove previous Liquibase dependencies
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("org.liquibase:liquibase-core:4.20.0") // Specify version explicitly

    // Add Groovy JSON dependency
    implementation("org.apache.groovy:groovy-json:${groovyVersion}")

    // Add Jackson dependency
    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.2")
    
    // Or alternatively, you can use Micronaut's built-in JSON handling
    implementation("io.micronaut:micronaut-jackson-databind")
}

application {
    mainClass.set("com.example.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative {
    toolchainDetection = false
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    // Comment out or remove the AOT section temporarily
    /*
    aot {
        optimizeServiceLoading = true
        convertYamlToJava = true
        precomputeOperations = true
        cacheEnvironment = true
    }
    */
}

tasks.withType(JavaExec) {
    jvmArgs = ['-Dmicronaut.environments=dev']
    // Add debug logging
    systemProperty "org.gradle.debug", "true"
    systemProperty "io.micronaut.context.env", "debug"
}

// Add or verify these configurations
jar {
    enabled = true
    archiveClassifier = ''  // Removes the 'plain' classifier
}

tasks.withType(Jar) {
    manifest {
        attributes(
            'Main-Class': 'com.example.Application'  // Update with your main class
        )
    }
} 