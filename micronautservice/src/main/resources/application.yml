# ===================================================================
# Micronaut configuration.
#
# This configuration will be overridden by the environment you use,
# for example application-dev.yml if you use the "dev" environment.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Micronaut configuration properties.
# Full reference is available at:
# https://docs.micronaut.io/latest/guide/configurationreference.html
# ===================================================================
micronaut:
  application:
    name: micronautservice
  router:
    static-resources:
      client:
        paths: classpath:static
        mapping: /**
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: PT1M
    binders:
      jvm:
        enabled: true
      uptime:
        enabled: true
      processor:
        enabled: true
      logback:
        enabled: true
      web:
        enabled: true
  security:
    enabled: true
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_SECRET:pleaseChangeThisSecretForANewOne}"'
        generator:
          access-token:
            expiration: 3600  # 1 hour in seconds
    basic-auth:
      enabled: false
    endpoints:
      login:
        enabled: true
      logout:
        enabled: true
    intercept-url-map:
      - pattern: /auth/**
        access: isAnonymous()
      - pattern: /hello
        access: isAuthenticated()
      - pattern: /
        access: isAnonymous()
      - pattern: /*.css
        access: isAnonymous()
      - pattern: /*.js
        access: isAnonymous()
      - pattern: /*.png
        access: isAnonymous()
      - pattern: /*.svg
        access: isAnonymous()
      - pattern: /manifest.webapp
        access: isAnonymous()
      - pattern: /app/**/*.*
        access: isAnonymous()
      - pattern: /i18n/**
        access: isAnonymous()
      - pattern: /content/**
        access: isAnonymous()
      - pattern: /swagger-ui/index.html
        access: isAnonymous()
      - pattern: /favicon.ico
        access: isAnonymous()
      - pattern: /test/**
        access: isAnonymous()
      - pattern: /api/register
        access: isAnonymous()
      - pattern: /api/activate
        access: isAnonymous()
      - pattern: /api/account/reset-password/init
        access: isAnonymous()
      - pattern: /api/account/reset-password/finish
        access: isAnonymous()
      - pattern: /api/**
        access: isAuthenticated()
      - pattern: /management/health
        access: isAnonymous()
      - pattern: /management/info
        access: isAnonymous()
      - pattern: /management/prometheus
        access: isAnonymous()
      - pattern: /management/**
        access: ROLE_ADMIN
      - pattern: /api/test-cors/
        access: isAnonymous()
      - pattern: /test/test-cors/
        access: isAnonymous()

  executors:
    scheduled:
      type: scheduled
      core-pool-size: 2
    io:
      type: fixed
      nThreads: 10
  server:
    cors:
      enabled: true
      configurations:
        web:
          allowedOrigins:
            - http://localhost:5173  # Your React app's URL
          allowedMethods:
            - POST
            - GET
            - PUT
            - DELETE
            - OPTIONS
          allowedHeaders:
            - Content-Type
            - Authorization
            - X-Requested-With
            - Accept
            - Origin
            - Access-Control-Request-Method
            - Access-Control-Request-Headers
          exposedHeaders:
            - Authorization
            - Link
            - X-Total-Count
          allowCredentials: true
          maxAge: 1800
endpoints:
  all:
    path: /management
    sensitive: false
  health:
    details-visible: AUTHENTICATED
    discovery-client:
      enabled: false
  loggers:
    enabled: true
jmx:
  register-endpoints: false

jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        show_sql: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'micronautserviceApp'
  mail:
    from: micronautservice@localhost
  swagger:
    default-include-pattern: /api/.*
    title: micronautservice API
    description: micronautservice API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license:
    license-url:
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

datasources:
  default:
    url: jdbc:postgresql://localhost:5432/micronautservice
    username: digitalnotary
    password: admin
    driverClassName: org.postgresql.Driver

liquibase:
  enabled: true
  datasources:
    default:
      change-log: classpath:db/changelog/db.changelog-master.xml
